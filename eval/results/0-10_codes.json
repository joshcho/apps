{"0": "t=int(input())\nfor i in range(t):\n\tn=int(input())\n\tcount=0\n\ta=[]\n\tfor i in range(n):\n\t\ta.append(input())\n\t\tc=a[len(a)-1]\n\t\tif c=='1':\n\t\t\tcount+=1\n\t\telse:\n\t\t\ta.pop()\n\tif count>0:\n\t\tif n%2==0:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\ta.reverse()\n\t\t\tprint(len(a),end=' ')\n\t\t\tprint(*(a))\n\telse:\n\t\tprint(count)\n\t\tprint(0)\n", "1": "n = int(input())\nfor q in range(n):\n\tx, y, k = list(map(int, input().split()))\n\tif max(x, y) > k:\n\t\tprint(-1)\n\telse:\n\t\tif 0 == (x + y) % 2:\n\t\t\tif k % 2 == max(x, y) % 2:\n\t\t\t\tprint(k)\n\t\t\telse:\n\t\t\t\tprint(k - 2)\n\t\telse:\n\t\t\tprint(k - 1)\n", "2": "", "3": "def solve():\n\tn, k = map(int,input().split())\n\tlst = list(map(int,input().split()))\n\tlst.sort()\n\tans = 0\n\tfor i in range(n - k - 1, n):\n\t\tans += lst[i]\n\tprint(ans)\nfor i in range(int(input())):\n\tsolve()\n", "4": "def mi():\n\treturn map(int, input().split())\n\n'''\n3\n6\n4 5 1 3 2 6\n5\n5 3 1 2 4\n4\n1 4 3 2\n3\n", "5": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nT = int(input())\nfor _ in range(T):\n\tN = int(input())\n\tA = [int(a) for a in input().split()]\n\tX = set()\n\tfor a in A:\n\t\tX.add(a)\n\tif len(X) == 1:\n\t\tprint(1)\n\t\tprint(0)\n\telif len(X) == 2:\n\t\tprint(2)\n\t\tprint(0)\n\telif len(X) == 3:\n\t\tprint(3)\n\t\tprint(2)\n\t\tprint(1)\n\t\tprint(0)\n\telse:\n\t\tprint(4)\n\t\tprint(3)\n\t\tprint(2)\n\t\tprint(1)\n\t\tprint(0)\n", "6": "import sys\ninputr = lambda: sys.stdin.readline().rstrip('\\n')\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n\tn, m = list(map(int, input().split()))\n\tadj = [[] for _ in range(n)]\n\n\tfor _ in range(m):\n\t\ta, b = list(map(int, input().split()))\n\t\ta -= 1\n\t\tb -= 1\n\t\tadj[a].append(b)\n\n\tLP = [0] * n\n\tr = []\n\n\tfor i in range(n):\n\t\tif LP[i] < 2:\n\t\t\tfor j in adj[i]:\n\t\t\t\tLP[j] = max(LP[j], LP[i] + 1)\n\t\telse:\n\t\t\tr.append(str(i+1))\n\n\tprint(len(r))\n\tprint(*r)\n\n\tassert 7 * len(r) <= 4 * n\n\n", "7": "import sys\ninput = sys.stdin.readline\nimport heapq as hq\nt = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tvt = [list(map(int,input().split())) for i in range(n)]\n\tvt.sort(reverse=True)\n\tq = []\n\thq.heapify(q)\n\tans = 0\n\tcnt = 0\n\tfor i in range(n):\n\t\thq.heappush(q,vt[i][1])\n\t\tif vt[i][0] >= n-i+cnt:\n\t\t\tans += hq.heappop(q)\n\t\t\tcnt += 1\n\tprint(ans)\n", "8": "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\n\nfor qu in range(T):\n\tN, K = list(map(int, readline().split()))\n\tS = [1 if s == 'W' else 0 for s in readline().strip()]\n\tif all(s == 0 for s in", "9": "for _ in range(int(input())):\n\ts = input()\n\tt = [i for i in s.split(\"0\") if i!=\"\"]\n\tt.sort(reverse=True)\n\tcnt=0\n\tfor i in range(0,len(t),2):\n\t\tcnt+=len(t[i])\n\tprint(cnt)\n"}